import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.pipeline import make_pipeline
dataset = pd.read_csv("/content/sample_data/car.csv")
dataset.head()
dataset.info()
dataset.shape[0]
dataset.isna().sum() / dataset.shape[0]
dataset.duplicated().sum()
dataset.describe()
dataset.describe(include = object)
#drop the car_id
dataset.drop(columns = 'Customer_Id', inplace = True)
dataset.head(3)
dataset.sample(3)
dataset['Owner'].unique()
import seaborn as sns
plt.figure(figsize = (10, 4))

sns.countplot(dataset, x = 'Owner')
plt.figure(figsize = (10, 4))
sns.histplot(dataset['Price'], color='red')
category_column = dataset.select_dtypes(include= object).columns.tolist()
category_column
numerical_col = dataset.select_dtypes(exclude=object).columns.tolist()
from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()

for column in category_column:
    dataset[column] = le.fit_transform(dataset[column])
dataset.sample(3)
drop_cols = ['Owner', 'Miles', 'Services', 'Airbags', 'Cylinders', 'Price']

dataset.drop(columns = drop_cols, inplace = True)
dataset.head()
X = dataset.iloc[:, :-1].values
y = dataset.iloc[:, -1].values
from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=2)
X_train
X_test
y_train
y_test
from sklearn.preprocessing import MinMaxScaler

scaler = MinMaxScaler()

X_train= scaler.fit_transform(X_train)
X_test= scaler.transform(X_test)
from sklearn.ensemble import RandomForestRegressor

regressor = RandomForestRegressor()
regressor.fit(X_train, y_train)
prediction = regressor.predict(X_test)
prediction
sns.set_style('whitegrid')
plt.scatter(y_test, prediction)
plt.show()
from sklearn.metrics import mean_absolute_error,r2_score
mean_absolute_error(y_test, prediction)
r2_score(y_test, prediction)
dataset.to_csv('Cleaned Car.csv')
